---

env:
  - distro: centos6
    init: /sbin/init
    run_opts: ""

services:
  - docker

# geerlingguy makes Docker builds specifically for Ansible testing
before_install:
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/ansible_uclalib_role_devtoolset4:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible_uclalib_role_devtoolset4/tests/test.yml --syntax-check'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible_uclalib_role_devtoolset4/tests/test.yml'
  - idempotence=$(mktemp)
  - 'docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/ansible_uclalib_role_devtoolset4/tests/test.yml | tee -a ${idempotence}'
  - 'tail ${idempotence} | grep -q "changed=0.*failed=0" && (echo "Idempotence test: pass" && exit 0) || (echo "Idempotence test: fail" && exit 1)'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm yum list installed centos-release-scl'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm yum list installed devtoolset-4-gcc'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm yum list installed devtoolset-4-gcc-c++'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm yum list installed devtoolset-4-libstdc++-devel'
  - 'docker exec "$(cat ${container_id})" /bin/bash -c "source /etc/profile.d/devtoolset4.sh && hash gcc 2>/dev/null"'
  - 'docker exec "$(cat ${container_id})" /bin/bash -c "source /etc/profile.d/devtoolset4.sh && hash g++ 2>/dev/null"'

notifications:
  # Notify Ansible Galaxy when a role builds successfully.
